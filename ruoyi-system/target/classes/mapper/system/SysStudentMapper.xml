<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysStudentMapper">

	<resultMap id="SysStudentResult" type="Student" >
		<id     property="id"       column="id"      />
		<result property="deptId"       column="dept_id"      />
		<result property="studentName"     column="student_name"    />
		<result property="email"        column="email"        />
		<result property="phonenumber"  column="phonenumber"  />
		<result property="sex"          column="sex"          />
		<result property="avatar"       column="avatar"       />
		<result property="type"       column="type"       />
		<result property="delFlag"      column="del_flag"     />
		<result property="createBy"     column="create_by"    />
		<result property="createTime"   column="create_time"  />
		<result property="updateBy"     column="update_by"    />
		<result property="updateTime"   column="update_time"  />
		<result property="remark"       column="remark"       />
		<association property="dept"    column="dept_id" javaType="SysDept" resultMap="deptResult" />
	</resultMap>

	<resultMap id="deptResult" type="SysDept">
		<id     property="deptId"   column="dept_id"     />
		<result property="parentId" column="parent_id"   />
		<result property="deptName" column="dept_name"   />
		<result property="orderNum" column="order_num"   />
		<result property="leader"   column="leader"      />
		<result property="status"   column="dept_status" />
	</resultMap>

	<resultMap id="RoleResult" type="SysRole">
		<id     property="roleId"       column="role_id"        />
		<result property="roleName"     column="role_name"      />
		<result property="roleKey"      column="role_key"       />
		<result property="roleSort"     column="role_sort"      />
		<result property="dataScope"     column="data_scope"    />
		<result property="status"       column="role_status"    />
	</resultMap>

	<sql id="selectUserVo">
        select u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.avatar, u.phonenumber, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark,
        d.dept_id, d.parent_id, d.dept_name, d.order_num, d.leader, d.status as dept_status,
        r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from sys_user u
		    left join sys_dept d on u.dept_id = d.dept_id
		    left join sys_user_role ur on u.user_id = ur.user_id
		    left join sys_role r on r.role_id = ur.role_id
    </sql>

	<sql id="selectStudentVo">
        select s.id, s.dept_id, s.student_name, s.email, s.avatar, s.phonenumber, s.sex, s.type, s.del_flag, s.create_by, s.create_time, s.remark,
        d.dept_id, d.parent_id, d.dept_name, d.order_num, d.leader, d.status as dept_status
        from sys_student s
		    left join sys_dept d on s.dept_id = d.dept_id
    </sql>

    <select id="selectStudentList" parameterType="Student" resultMap="SysStudentResult">
		select s.id, s.dept_id, s.student_name, s.email, s.avatar, s.phonenumber, s.sex, s.type, s.del_flag, s.create_by, s.create_time, s.remark, d.dept_name, d.leader
		from sys_student s
		left join sys_dept d on s.dept_id = d.dept_id
		where s.del_flag = '0'
		<if test="studentName != null and studentName != ''">
			AND s.student_name like concat('%', #{studentName}, '%')
		</if>
		<if test="type != null and type != ''">
			AND s.type = #{type}
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND s.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(s.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(s.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		<if test="deptId != null and deptId != 0">
			AND (s.dept_id = #{deptId} OR s.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId}, ancestors) ))
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectStudentByStudentName" parameterType="String" resultType="Student">
	    <include refid="selectStudentVo"/>
		where s.student_name = #{studentName}
	</select>

	<select id="selectStudentById" parameterType="Long" resultMap="SysStudentResult">
		<include refid="selectStudentVo"/>
		where s.id = #{id}
	</select>

	<select id="checkUserNameUnique" parameterType="String" resultType="int">
		select count(1) from sys_user where user_name = #{userName} limit 1
	</select>

	<select id="checkPhoneUnique" parameterType="String" resultType="Student">
		select id, phonenumber from sys_student where phonenumber = #{phonenumber} limit 1
	</select>

	<select id="checkEmailUnique" parameterType="String" resultType="Student">
		select id, email from sys_student where email = #{email} limit 1
	</select>

	<insert id="insertStudent" parameterType="Student" useGeneratedKeys="true" keyProperty="id">
 		insert into sys_student(
 			<if test="id != null and id != 0">id,</if>
 			<if test="deptId != null and deptId != 0">dept_id,</if>
 			<if test="studentName != null and studentName != ''">student_name,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="avatar != null and avatar != ''">avatar,</if>
 			<if test="phonenumber != null and phonenumber != ''">phonenumber,</if>
 			<if test="sex != null and sex != ''">sex,</if>
 			<if test="type != null and type != ''">`type`,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			create_time
 		)values(
 			<if test="id != null and id != ''">#{id},</if>
 			<if test="deptId != null and deptId != ''">#{deptId},</if>
 			<if test="studentName != null and studentName != ''">#{studentName},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="avatar != null and avatar != ''">#{avatar},</if>
 			<if test="phonenumber != null and phonenumber != ''">#{phonenumber},</if>
 			<if test="sex != null and sex != ''">#{sex},</if>
 			<if test="type != null and type != ''">#{type},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
 			sysdate()
 		)
	</insert>

	<update id="updateStudent" parameterType="Student">
 		update sys_student
 		<set>
 			<if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
 			<if test="studentName != null and studentName != ''">student_name = #{studentName},</if>
 			<if test="email != null ">email = #{email},</if>
 			<if test="phonenumber != null ">phonenumber = #{phonenumber},</if>
 			<if test="sex != null and sex != ''">sex = #{sex},</if>
 			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
 			<if test="type != null and type != ''">type = #{type},</if>
 			<if test="remark != null">remark = #{remark},</if>
			<if test="updateBy != null and updateBy != ''">update_by=#{updateBy},</if>
 			update_time = sysdate()
 		</set>
 		where id = #{id}
	</update>

	<!--<update id="updateUserStatus" parameterType="SysUser">
 		update sys_user set status = #{status} where user_id = #{userId}
	</update>-->

	<update id="updateUserAvatar" parameterType="SysUser">
 		update sys_user set avatar = #{avatar} where user_name = #{userName}
	</update>

	<update id="resetUserPwd" parameterType="SysUser">
 		update sys_user set password = #{password} where user_name = #{userName}
	</update>

	<delete id="deleteUserById" parameterType="Long">
 		delete from sys_user where user_id = #{userId}
 	</delete>

 	<delete id="deleteStudentByIds" parameterType="Long">
 		update sys_student set del_flag = '2' where id in
 		<foreach collection="array" item="id" open="(" separator="," close=")">
 			#{id}
        </foreach>
 	</delete>

</mapper>
